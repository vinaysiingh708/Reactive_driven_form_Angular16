{"ast":null,"code":"export class CustomValidators {\n  static noSpaceAllowed(control) {\n    if (control.value != null && control.value.indexOf(' ') != -1) {\n      return {\n        noSpaceAllowed: true\n      };\n    }\n    return null;\n  }\n}\nfunction userNameAllowed(username) {\n  const takenUserNames = ['ravi', 'vinay'];\n}","map":{"version":3,"names":["CustomValidators","noSpaceAllowed","control","value","indexOf","userNameAllowed","username","takenUserNames"],"sources":["D:\\Angular Course syllabus by Vinay\\angular-16-complete-course-main\\13-angular-reactive-form\\start\\src\\app\\Validators\\noSpaceAllowed.validator.ts"],"sourcesContent":["import { FormControl } from \"@angular/forms\";\r\n\r\nexport class CustomValidators{\r\n\r\n    static noSpaceAllowed(control : FormControl){\r\n\r\n        if(control.value !=null && control.value.indexOf(' ') != -1){\r\n            return {noSpaceAllowed: true}\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction userNameAllowed(username: string){\r\n    const takenUserNames= ['ravi','vinay']\r\n}"],"mappings":"AAEA,OAAM,MAAOA,gBAAgB;EAEzB,OAAOC,cAAcA,CAACC,OAAqB;IAEvC,IAAGA,OAAO,CAACC,KAAK,IAAG,IAAI,IAAID,OAAO,CAACC,KAAK,CAACC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAC;MACxD,OAAO;QAACH,cAAc,EAAE;MAAI,CAAC;;IAEjC,OAAO,IAAI;EACf;;AAGJ,SAASI,eAAeA,CAACC,QAAgB;EACrC,MAAMC,cAAc,GAAE,CAAC,MAAM,EAAC,OAAO,CAAC;AAC1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}